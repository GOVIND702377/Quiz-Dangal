name: Deploy Supabase Edge Functions

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'supabase/functions/**'
      - '.github/workflows/deploy-functions.yml'

permissions:
  contents: read

concurrency:
  group: deploy-functions-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Login to Supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo "Missing SUPABASE_ACCESS_TOKEN secret" >&2; exit 1; fi
          supabase login --token "$SUPABASE_ACCESS_TOKEN"

      - name: Link project
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          if [ -z "$SUPABASE_PROJECT_REF" ]; then
            echo "Missing SUPABASE_PROJECT_REF secret" >&2; exit 1; fi
          supabase link --project-ref "$SUPABASE_PROJECT_REF" --workdir ./

      - name: Deploy functions
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          supabase functions deploy ai-orchestrator --project-ref "$SUPABASE_PROJECT_REF"
          supabase functions deploy admin-upsert-questions --project-ref "$SUPABASE_PROJECT_REF"

      - name: Post-deploy sanity ping (ai-orchestrator)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
        run: |
          if [ -z "$SUPABASE_URL" ] || [ -z "$CRON_SECRET" ]; then
            echo "Skipping ping (missing SUPABASE_URL or CRON_SECRET)"; exit 0; fi
          URL="$SUPABASE_URL/functions/v1/ai-orchestrator?task=run"
          echo "Pinging $URL"
          curl -sS -X POST "$URL" \
            -H "Content-Type: application/json" \
            -H "X-Cron-Secret: $CRON_SECRET" \
            ${SUPABASE_ANON_KEY:+ -H "Authorization: Bearer $SUPABASE_ANON_KEY"} \
            ${SUPABASE_ANON_KEY:+ -H "apikey: $SUPABASE_ANON_KEY"} \
            -d '{}' | tee /dev/stderr
